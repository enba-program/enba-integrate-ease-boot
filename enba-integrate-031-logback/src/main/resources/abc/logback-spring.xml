<?xml version="1.0" encoding="UTF-8" ?>

<configuration debug="false" status="WARN">
  <!--  <include resource="org/springframework/boot/logging/logback/defaults.xml"/>-->

  <property name="LOG_CONTEXT_NAME" value="enba-integrate-031-logback"/>
  <property name="LOG_HOME" value="../logs/${LOG_CONTEXT_NAME}"/>

  <!--  控制台输出-->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{56}.%method:%L - %msg%n
      </pattern>
    </encoder>
  </appender>

  <!--info日志统一输出-->
  <appender name="file.info" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <Prudent>true</Prudent>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志文件输出的文件名，按天生成-->
      <FileNamePattern>${LOG_HOME}.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
      <!--日志文件保留天数-->
      <MaxHistory>15</MaxHistory>
      <timeBasedFileNamingAndTriggeringPolicy
        class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- 除按日志记录之外，还配置了日志文件不能超过100M(默认)，若超过100M，日志文件会以索引0开始 -->
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %method 方法名  %L 行数 %msg：日志消息，%n是换行符-->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{56}.%method:%L - %msg%n
      </pattern>
      <charset>utf-8</charset>
    </encoder>
  </appender>

  <!--  异步打印日志-->
  <appender name="async-info" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="file.info"/>
  </appender>

  <!--  在 Logback 中，additivity 属性用于控制是否将日志事件传递给父 Logger。当一个 Logger 记录日志时，默认情况下它会将日志事件传递给它的父 Logger，这被称为“additivity”-->
  <root level="info" additivity="false">
    <appender-ref ref="STDOUT"/>
    <!--    <appender-ref ref="file.info"/>-->
    <appender-ref ref="async-info"/>
  </root>
</configuration>
